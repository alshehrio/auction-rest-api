FORMAT: 1A
HOST: http://auction.stc.com.sa/ 


# Auction REST API v1.0

The Auction API provides a list of API for developers to interact with Auction system.
 
## HTTP request headers

The following is a mandatory header tags, that must be sent with each request.
  * content-type - The format of the request body - only application/json is supported at this time
  * accept-language - The language that you want the descriptions returned in - eg. en/ar.
  * channel-Id - The identity of the caller - only predefined channels are allowed to consume the API.
  * client-Ip  - The ip address of client.
  * user-agent - The app version of the mobile application that tries to consume the API.
  * api-version - The API version of auction application - eg. v1, otherwise don't send this tag to get the latest version 
  
## HTTP response codes

  * 200 - The request completed OK
  * 201 - The specified object was created sucessfully
  * 204 - The request completed OK (No Content)
  * 400 - The request was not understood
  * 403 - You do not have access to the requested object
  * 404 - The object that was requested doesn't exist
  * 405 - The resource exists, but the wrong method was used. 
  * 500 - There was an internal API error
  * 501 - You have used a method (GET/PUT/POST/DELETE/etc) not supported by this endpoint
  
## HTTP response headers

  * Content-Type - The format of the response body eg. application/json

## Categories Collection [/categories]     

### List all Categorires [GET]  

Return list of all Categorires

+ Request (application/json)

    + Headers

            Accept-Language: en
            
+ Response 200 (application/json)

        {
          "Categories": [
            {
              "id": 2,
              "name": "Diamond",
              "minimumIncrement": 200,
              "links": {
                "self": {
                  "href": "http://auction.stc.com.sa/v1/category/2"
                }
              }
            },
            {
              "id": 1,
              "name": "Gold",
              "minimumIncrement": 200,
              "links": {
                "self": {
                  "href": "http://auction.stc.com.sa/v1/category/1"
                }
              }
            }
          ]
        }

## Categories Detail [/categories/{id}]     

+ Parameters
    + id: `1` (number, required) - Id of a Category.
    
### Retrieve a Category [GET]  

Returns a single Category

+ Request (application/json)

    + Headers

            Accept-Language: en
            
+ Response 200 (application/json)

            {
               "id":2,
               "name": "Diamond",
               "minimumIncrement": 200,
               "depositAmount":1000,
               "isAutoBidAllowed" : "true",
               "isPurchaseAllowed" : "true",
               "purchasePrice":100000,
               "numberOfBidToStartAutoBid" : 25,
               "purchaseDisablePercentege" : 80
            }
            
+ Response 500 (application/json)


    + Attributes
        + code (string) - Auction error code 
        + reason (string) - Auction reason message returned by the auction API.
        + description (string) -  Describes the reason message returned by the auction API.
        
    + Body      
    
            "error":  
            {
                "code": "AUC006",
                "reason": "Element Not found.",
                "description": "Element Not found."
            }
        

### Update a Category [PUT]

+ Request (application/json)

    + Headers

            Accept-Language: en
            
    + Body
            
            {   
               "name": "Diamond",
               "minimumIncrement": 200,
               "depositAmount":1000,
               "isAutoBidAllowed" : "true",
               "isPurchaseAllowed" : "true",
               "purchasePrice":100000,
               "numberOfBidToStartAutoBid" : 25,
               "purchaseDisablePercentege" : 80
            }

+ Response 204 (application/json)

+ Response 500 (application/json)

## Products Collection [/products{?page,size,sort,order,categoryId}]

### List All Products [GET]

Return list of all products

+ Parameters
    + page      (number, optional)
      + Default: 0
    + size      (number, optional)
      + Default: 100
    + sort     (optional)
      + Default: `id`
      + Members
            + `price`
            + `numberOfBids`
            + `views` 
            + `id`
    + order     (optional)
      + Default: `ASC`
      + Members
            + `ASC`
            + `DESC`
    + categoryId (number, optional)

    
+ Response 200 (application/json)
 
        {     
    
              
          "products": [
            {
              "id": 1001,
              "number": "533996655",
              "currentPrice": 8000,
              "productStatus": "sold",
              "category": {
                "id":1,
                "name": "Gold",
                "minimumIncrement": 200,
                "links": {
                  "self": {
                    "href": "http://auction.stc.com.sa/v1/category/1"
                  }
                }
              }
            },
            {
              "id": 1002,
              "number": "5399999999",
              "currentPrice": 8000,
              "productStatus": "new",
              "category": {
                "id":2,
                "name": "Diamond",
                "minimumIncrement": 200,
                "links": {
                  "self": {
                    "href": "http://auction.stc.com.sa/v1/category/2"
                  }
                }
              }
            }
          ],
          "links": {
            "self": {
              "href": "http://auction.stc.com.sa/v1/products?page=1&size=2"
            },
            "first": {
              "href": "http://auction.stc.com.sa/v1/products?page=0&size=2"
            },
            "prev": {
              "href": "http://auction.stc.com.sa/v1/products?page=0&size=2"
            },
            "next": {
              "href": "http://auction.stc.com.sa/v1/products?page=2&size=2"
            },
            "last": {
              "href": "http://auction.stc.com.sa/v1/products?page=49&size=2"
            }
          },
          "page": {
            "size": 2,
            "totalElements": 100,
            "totalPages": 50,
            "number": 1
          }
        }
  
 
## Products Detail [/products/{id}{?userId}]     

### View a product detail [GET]

Return a single product detail resource.

+ Parameters

    + id: `1001` (number, required) - Id of a product.
    + userId: `anonymous`  (optional) - possible values anonymous or userId, send userId if you looking for user status. 
                                        
+ Response 200 (application/json)

    + Attributes  
        + id (string) - Id of a product.
        + number (string) - auction number
        + currentPrice (string) - auction last price.
        + expiryDate  (string) - auction expiry date.
        + numberOfBids (number) - totale number of bids.
        + hasAutoBid  (string) - return if auto bid featuer enabled or disable
        + productStatus (enum[string]) - return list of product status
            + Members
                + `sold` 
                + `new`
        + userBidStatus (enum[string]) -  return list of bid status belongs to a specific user, return none if anonymous user sent in the request 
            + Members
                + `noBid`
                + `highestBidder`
                + `outbid` 
                + `none`
        + category  - 
            + id  (number) - Id of a product.
            + name (string) - name of a category
            + minimumIncrement (string)  - category minimum Increment
        + projection (enum[string]) -  possible values detail or summary. 
            + Members
                + `detail` - return all product detail fields. 
                + `summary` - return currentPrice, numberOfBids , hasAutoBid , productStatus , userBidStatus fields.
    + Body
    
            {
              "id": 1001,
              "number": "533996655",add 
              "currentPrice": 8000,
              "expiryDate": "12/13/2015 11:51:59.000000 AM",
              "numberOfBids": 15,
              "hasAutoBid": false,
              "productStatus": "sold",
              "userBidStatus": "none",
              "category": {
                "id":2,
                "name": "Diamond",
                "minimumIncrement": 200
                "links": {
                  "self": {
                    "href": "http://auction.stc.com.sa/v1/category/1"
                  }
                }
              }
            }

+ Response 500 (application/json)

        + Attributes
            + code (string) - Auction error code 
            + reason (string) - Auction reason message returned by the auction API.
            + description (string) -  Describes the reason message returned by the auction API.
   
        + Body
   
            "error":  
            {
                "code": "AUC006",
                "reason": "Element Not found!",
                "description": "Element Not found",
            }

       
## Products Search  [/products/search{?page,size,sort,order,categoryId,number,startPrice,endPrice}]

### Search [GET]

Return a list of all matched products

+ Parameters
    + page      (number, optional)
      + Default: 0
    + size      (number, optional)
      + Default: 100
    + sort     (optional)
      + Default: `id`
      + Members
            + `price`
            + `id`
            +  `number`
    + order     (optional)
      + Default: `ASC`
      + Members
            + `ASC`
            + `DESC`
    + categoryId (number, optional)
    + startPrice (number, optional)
    + endPrice (number, optional)
    + number (number, optional)
    
+ Response 200 (application/json)

    + Attributes  
        
        + id (string) - Id of a product.
        + number (string) - auction number
        + currentPrice (string) - auction last price.
        + productStatus (enum[string]) - return list of product status
            + Members
                + `sold` 
                + `new`
        + category  - 
        + id  (number) - Id of a product.
        + name (string) - name of a category
        + minimumIncrement (string)  - category minimum Increment

    + Body  
        
            {
              "products": [
                {
                  "id": 1001,
                  "number": "533996655",
                  "currentPrice": 8000,
                  "productStatus": "new",
                  "category": {
                    "id": 1,
                    "name": "Gold",
                    "minimumIncrement": 200,
                    "links": {
                      "self": {
                        "href": "http://auction.stc.com.sa/v1/category/1"
                      }
                    }
                  }
                },
                {
                  "id": 1002,
                  "number": "5399999999",
                  "currentPrice": 8000,
                  "productStatus": "new",
                  "category": {
                    "id": 2,
                    "name": "Diamond",
                    "minimumIncrement": 300,
                    "links": {
                      "self": {
                        "href": "http://auction.stc.com.sa/v1/category/2"
                      }
                    }
                  }
                }
              ],
              "links": {
                "self": {
                  "href": "http://auction.stc.com.sa/v1/products?page=1&size=2"
                },
                "first": {
                  "href": "http://auction.stc.com.sa/v1/products?page=0&size=2"
                },
                "prev": {
                  "href": "http://auction.stc.com.sa/v1/products?page=0&size=2"
                },
                "next": {
                  "href": "http://auction.stc.com.sa/v1/products?page=2&size=2"
                },
                "last": {
                  "href": "http://auction.stc.com.sa/v1/products?page=49&size=2"
                }
              },
              "page": {
                "size": 2,
                "totalElements": 100,
                "totalPages": 50,
                "number": 1
              }
            }
            
## Bids Collection [/products/{id}/bids]

+ Parameters
    + id: `1001` (number, required) - Id of a product.

### Place a New Bids [POST]

You may create your own bid using this action. It takes a JSON
object containing a user id and a amount of bid.


+ Request (application/json)


    + Headers

            Accept-Language: en
            
    + Body
            
            {
                "userId": 123,
                "bidAmount": 5000,
                "hasAutoBid": "true"
            }

+ Response 201 (application/json)

    + Attributes 
    
        + numberOfBids (number) - totale number of bids.
        + hasAutoBid  (string) - return weather of auto bid featuer enabled or disable
        + bidAmount (string) - return last bid amount.
        + userBidStatus (enum[string]) -  return list of bid status belongs to a specific user, return none if no user sent in the request 
            + Members
                + `noBid`
                + `highestBidder`
                + `outbid` 
                + `none`
        
    + Body
    
            {
               "numberOfBids": 37,
               "bidAmount": 5000,
               "userBidStatus": "highestBidder",
               "hasAutoBid":true
            }

+ Response 500 (application/json)
        
  **Error Code:**
    - AUC001 : User doesn't pay deposit payment.
    - AUC002 : User is blacklisted in auction.
    - AUC003 : User is already highest bidder.
    - AUC004 : Auction is not active.
    - AUC005 : Bid is less than minimum bid.
    - AUC007 : wrong bid type
    
    + Attributes
        + code (string) - Auction error code 
        + reason (string) - Auction reason message returned by the auction API.
        + description (string) -  Describes the reason message returned by the auction API.
        
    + Body

            {
                "error":  
                {
                    "code": "AUC001",
                    "reason": "Deposit Required",
                    "description": "To complete the bidding process on this number,you must pay a deposit payment",
                }
            }